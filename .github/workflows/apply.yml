name: Terraform Apply
on:
  push:
    branches: ["main"]
permissions:
  id-token: write
  contents: read
  pull-requests: write
jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Notify Slack Start
        if: success()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: deployment-notes
          status: STARTING
          color: warning

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: |
          cd terraform/gazidizdaroglu
          terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          cd terraform/gazidizdaroglu
          terraform init

      - name: Terraform Validate
        id: validate
        run: |
          cd terraform/gazidizdaroglu
          terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: |
          cd terraform/gazidizdaroglu
          terraform apply -no-color -input=false -auto-approve

      - name: Notify Slack Success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: deployment-notes
          status: SUCCESS
          color: good

      